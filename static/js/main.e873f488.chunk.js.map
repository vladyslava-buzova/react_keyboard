{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","key","setState","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,YAAY,GAFhB,uDAiBE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAChB,UAAdA,EAAMC,KACR,EAAKC,SAAS,CAAEL,YAAY,SApBpC,oBAyBE,WACE,IAAQA,EAAeM,KAAKP,MAApBC,WAER,OACE,qBAAKO,UAAU,MAAf,SAEGP,EACG,kCACA,gCAjCZ,GAAyBQ,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.e873f488.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: boolean;\n};\n\nexport class App extends Component <{}, State> {\n  state: Readonly<State> = {\n    pressedKey: false,\n  };\n\n  // componentDidMount() {\n  //   document.addEventListener('keyup', this.handleDocumentClick);\n  // }\n\n  // componentWillUnmount() {\n  //   document.removeEventListener('keyup', this.handleDocumentClick);\n  // }\n\n  // handleDocumentClick = () => {\n  //   this.setState({ pressedKey: true });\n  // };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        this.setState({ pressedKey: true });\n      }\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {pressedKey\n          ? 'The last pressed key is [Enter]'\n          : 'Nothing was pressed yet'}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}