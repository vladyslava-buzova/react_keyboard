{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentClick","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,YAAY,GAFhB,EAaEC,oBAAsB,WACpB,EAAKC,SAAS,CAAEF,YAAY,KAdhC,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKJ,uBAN5C,kCASE,WACEE,SAASG,oBAAoB,QAASD,KAAKJ,uBAV/C,oBAiBE,WACE,IAAQD,EAAeK,KAAKN,MAApBC,WAER,OACE,qBAAKO,UAAU,MAAf,SAEGP,EACG,kCACA,gCAzBZ,GAAyBQ,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.ea0389f8.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: boolean;\n};\n\nexport class App extends Component <{}, State> {\n  state: Readonly<State> = {\n    pressedKey: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = () => {\n    this.setState({ pressedKey: true });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {pressedKey\n          ? 'The last pressed key is [Enter]'\n          : 'Nothing was pressed yet'}\n      </div>\n    );\n  }\n}\n\n// componentDidMount() {\n//   document.addEventListener('keyup', (event: KeyboardEvent) => {\n//     if (event.key === 'Enter') {\n//       this.setState({ pressedKey: true });\n//     }\n//   });\n// }\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}