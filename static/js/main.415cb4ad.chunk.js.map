{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentClick","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACH,UAAdA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAY,qCAflC,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SAEGT,EACG,kCACA,gCA3BZ,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.415cb4ad.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component <{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = (event: KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      this.setState({ pressedKey: 'The last pressed key is [Enter]' });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {pressedKey\n          ? 'The last pressed key is [Enter]'\n          : 'Nothing was pressed yet'}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}